<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.naeunminchocofarm.ncf_api.smart_farm.mapper.SensorMapper">
    <resultMap id="SensorResultMap" type="com.naeunminchocofarm.ncf_api.smart_farm.entity.Sensor">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="sectionId" column="section_id" />
        <result property="uuidId" column="uuid_id" />
        <result property="sensorType" column="sensor_type" />
        <result property="uuid" column="uuid" /> <!-- UUID 문자열 -->
    </resultMap>

    <!-- 센서 전체 조회 -->
    <select id="getAllSensors" resultType="com.naeunminchocofarm.ncf_api.smart_farm.entity.Sensor">
        SELECT * FROM sensors
    </select>

    <!--  특정 구역의 센서 조회  -->
    <select id="getSensorBySectionId" resultMap="SensorResultMap">
        SELECT
            s.id,
            name,
            section_id,
            uuid_id,
            sensor_type,
            uuid AS uuid
        FROM sensors s
        INNER JOIN uuids u ON s.uuid_id = u.id
        WHERE s.section_id = #{sectionId}
    </select>

    <!-- 센서 등록 -->
    <insert id="insertSensor">
        <selectKey keyProperty="uuidId" resultType="int" order="BEFORE">
            INSERT INTO uuids (uuid) VALUES (#{uuid}) RETURNING id
        </selectKey>

        INSERT INTO sensors (
            name
            , section_id
            , uuid_id
            , sensor_type
        ) VALUES (
            #{name}
            , #{sectionId}
            , #{uuidId}
            , #{sensorType}
        )
    </insert>

    <!-- 센서 수정 -->
    <update id="updateSensor">
        UPDATE sensors
        SET name = #{name},
        sensor_type = #{sensorType}
        WHERE id = #{id}
    </update>

    <!-- 센서 삭제 -->
    <delete id="deleteSensor">
        DELETE FROM sensors
        WHERE id = #{id}
    </delete>

</mapper>